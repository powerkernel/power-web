# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node CI

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm"
      - run: npm ci

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - run: npm ci
      - run: npm test

  e2e:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Build app
        run: npm run build
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    if: github.event_name != 'pull_request'
    needs: ["test", "e2e"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (staging)
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            NODE_AUTH_TOKEN=${{secrets.NODE_AUTH_TOKEN}}
          platforms: linux/arm64,linux/amd64
          push: true
          tags: ghcr.io/${{github.repository}}:main
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push (prod)
        if: startsWith(github.ref_name, 'v')
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            NODE_AUTH_TOKEN=${{secrets.NODE_AUTH_TOKEN}}
          platforms: linux/arm64,linux/amd64
          push: true
          tags: ghcr.io/${{github.repository}}:${{github.ref_name}},ghcr.io/${{github.repository}}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install-kubectl

      - name: Set the Kubernetes context (staging)
        if: github.ref_name == 'main'
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.KUBE_CONFIG_STAGING}}

      - name: Set the Kubernetes context (production)
        if: startsWith(github.ref_name, 'v')
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.KUBE_CONFIG_PROD}}

      - name: Deploy to the Kubernetes cluster (staging)
        if: github.ref_name == 'main'
        run: |
          ${{ steps.install-kubectl.outputs.kubectl-path }} rollout restart deploy power-web-depl -n powerkernel-dev

      - name: Deploy to the Kubernetes cluster (production)
        if: startsWith(github.ref_name, 'v')
        uses: azure/k8s-deploy@v4
        with:
          namespace: powerkernel-com
          manifests: |
            k8s/prod-depl.yml
          strategy: basic
          images: |
            ghcr.io/${{github.repository}}:${{github.ref_name}}
          annotate-namespace: false
